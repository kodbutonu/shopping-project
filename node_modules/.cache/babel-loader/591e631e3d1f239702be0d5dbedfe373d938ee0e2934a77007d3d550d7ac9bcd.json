{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartDetails = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    // Sepetteki ürünler\n    totalQuantity: 0 // Toplam ürün sayısı\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload; // Yeni eklenen ürün\n      const existingItem = state.items.find(item => item.itemId === newItem.id); // Sepette bu ürün var mı kontrol et\n      if (!existingItem) {\n        // Eğer ürün sepette yoksa, sepete ekle\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          name: newItem.title,\n          totalPrice: newItem.price // Toplam fiyat, ürünün ilk fiyatı\n        });\n      } else {\n        // Eğer ürün zaten sepette varsa, miktarını arttır\n        existingItem.quantity++;\n        existingItem.totalPrice += newItem.price; // Toplam fiyatı güncelle\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload; // Çıkarılacak ürünün id'si\n      const existingItem = state.items.find(item => item.itemId === id); // Ürünü bul\n      if (existingItem.quantity === 1) {\n        // Eğer ürünün miktarı 1 ise, tamamen çıkar\n        state.items = state.items.filter(item => item.itemId !== id);\n      } else {\n        // Eğer ürünün miktarı 1'den fazla ise, miktarını azalt\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price; // Toplam fiyatı güncelle\n      }\n    }\n  }\n});\nexport default cartDetails.reducer;\nexport const cartActions = cartDetails.actions;","map":{"version":3,"names":["createSlice","cartDetails","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","itemId","id","push","price","quantity","title","totalPrice","removeItemFromCart","filter","reducer","cartActions","actions"],"sources":["C:/Users/coding/Desktop/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartDetails = createSlice({\r\n    name: \"cart\",\r\n    initialState: {\r\n        items: [], // Sepetteki ürünler\r\n        totalQuantity: 0, // Toplam ürün sayısı\r\n    },\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload; // Yeni eklenen ürün\r\n            const existingItem = state.items.find(item => item.itemId === newItem.id); // Sepette bu ürün var mı kontrol et\r\n            if (!existingItem) {\r\n                // Eğer ürün sepette yoksa, sepete ekle\r\n                state.items.push({ \r\n                    itemId: newItem.id, \r\n                    price: newItem.price, \r\n                    quantity: 1, \r\n                    name: newItem.title,\r\n                    totalPrice: newItem.price // Toplam fiyat, ürünün ilk fiyatı\r\n                });\r\n            } else {\r\n                // Eğer ürün zaten sepette varsa, miktarını arttır\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice += newItem.price; // Toplam fiyatı güncelle\r\n            }\r\n        },\r\n        removeItemFromCart(state, action) { \r\n            const id = action.payload; // Çıkarılacak ürünün id'si\r\n            const existingItem = state.items.find(item => item.itemId === id); // Ürünü bul\r\n            if (existingItem.quantity === 1) {\r\n                // Eğer ürünün miktarı 1 ise, tamamen çıkar\r\n                state.items = state.items.filter(item => item.itemId !== id);\r\n            } else {\r\n                // Eğer ürünün miktarı 1'den fazla ise, miktarını azalt\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice -= existingItem.price; // Toplam fiyatı güncelle\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport default cartDetails.reducer;\r\nexport const cartActions = cartDetails.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,WAAW,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IAAE;IACXC,aAAa,EAAE,CAAC,CAAE;EACtB,CAAC;EACDC,QAAQ,EAAE;IACNC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO,CAAC,CAAC;MAChC,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAKL,OAAO,CAACM,EAAE,CAAC,CAAC,CAAC;MAC3E,IAAI,CAACJ,YAAY,EAAE;QACf;QACAJ,KAAK,CAACJ,KAAK,CAACa,IAAI,CAAC;UACbF,MAAM,EAAEL,OAAO,CAACM,EAAE;UAClBE,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXjB,IAAI,EAAEQ,OAAO,CAACU,KAAK;UACnBC,UAAU,EAAEX,OAAO,CAACQ,KAAK,CAAC;QAC9B,CAAC,CAAC;MACN,CAAC,MAAM;QACH;QACAN,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACS,UAAU,IAAIX,OAAO,CAACQ,KAAK,CAAC,CAAC;MAC9C;IACJ,CAAC;IACDI,kBAAkBA,CAACd,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMO,EAAE,GAAGP,MAAM,CAACE,OAAO,CAAC,CAAC;MAC3B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAKC,EAAE,CAAC,CAAC,CAAC;MACnE,IAAIJ,YAAY,CAACO,QAAQ,KAAK,CAAC,EAAE;QAC7B;QACAX,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACmB,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAKC,EAAE,CAAC;MAChE,CAAC,MAAM;QACH;QACAJ,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACS,UAAU,IAAIT,YAAY,CAACM,KAAK,CAAC,CAAC;MACnD;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,eAAejB,WAAW,CAACuB,OAAO;AAClC,OAAO,MAAMC,WAAW,GAAGxB,WAAW,CAACyB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}