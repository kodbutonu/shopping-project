{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartDetails = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id == newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter();\n      } else {\n        existingItem.quantity--;\n      }\n    }\n  }\n});\nexport default cartDetails;\nexport const cartSlice = cartDetails.actions;","map":{"version":3,"names":["createSlice","cartDetails","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","quantity","title","totalPrice","removeItemFromCart","filter","cartSlice","actions"],"sources":["C:/Users/coding/Desktop/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst cartDetails = createSlice({\r\n    name: \"cart\",\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n    },\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id == newItem.id);\r\n            if (!existingItem) {\r\n                state.items.push({ itemId: newItem.id, price: newItem.price, quantity: 1 ,name:newItem.title});\r\n            }\r\n            else{\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice=existingItem.totalPrice+newItem.price;\r\n            }\r\n        },\r\n        removeItemFromCart(state,action) { \r\n         const id=action.payload;\r\n         const existingItem=state.items.find(item=>item.id===id);\r\n         if(existingItem.quantity===1){\r\n         state.items=state.items.filter();\r\n         }\r\n         else{\r\n            existingItem.quantity--;\r\n         }\r\n        }\r\n    }\r\n})\r\n\r\nexport default cartDetails;\r\nexport const cartSlice = cartDetails.actions;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,WAAW,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACnB,CAAC;EACDC,QAAQ,EAAE;IACNC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,IAAIL,OAAO,CAACK,EAAE,CAAC;MACpE,IAAI,CAACH,YAAY,EAAE;QACfJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UAAEC,MAAM,EAAEP,OAAO,CAACK,EAAE;UAAEG,KAAK,EAAER,OAAO,CAACQ,KAAK;UAAEC,QAAQ,EAAE,CAAC;UAAEjB,IAAI,EAACQ,OAAO,CAACU;QAAK,CAAC,CAAC;MAClG,CAAC,MACG;QACAR,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACS,UAAU,GAACT,YAAY,CAACS,UAAU,GAACX,OAAO,CAACQ,KAAK;MACjE;IACJ,CAAC;IACDI,kBAAkBA,CAACd,KAAK,EAACC,MAAM,EAAE;MAChC,MAAMM,EAAE,GAACN,MAAM,CAACE,OAAO;MACvB,MAAMC,YAAY,GAACJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,EAAE,KAAGA,EAAE,CAAC;MACvD,IAAGH,YAAY,CAACO,QAAQ,KAAG,CAAC,EAAC;QAC7BX,KAAK,CAACJ,KAAK,GAACI,KAAK,CAACJ,KAAK,CAACmB,MAAM,CAAC,CAAC;MAChC,CAAC,MACG;QACDX,YAAY,CAACO,QAAQ,EAAE;MAC1B;IACD;EACJ;AACJ,CAAC,CAAC;AAEF,eAAelB,WAAW;AAC1B,OAAO,MAAMuB,SAAS,GAAGvB,WAAW,CAACwB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}